"""
Python solution for Histogram Max Rectangular Area problem at https://www.geeksforgeeks.org/problems/maximum-rectangular-area-in-a-histogram-1587115620/1
difficulty: hard
input is a histogram list of integers
goal is to return the maximum rectangular area that can be formed by the histogram bars (assume width = 1)
time complexity and auxiliary space are both O(n)
"""

class Solution:
    # forms lists of what the bounds for the rectangle would be for each element
    # (assuming that element is the smallest in the rectangle), then computes max area
    def getMaxArea(self, histogram):
        n = len(histogram)
        # initialize a stack with tuple (first element, first index)
        stack = [(histogram[0], 0)]
        # initialize list of indexes for closest smaller element on the left side
        leftSmaller = [-1] * n
        # loop through input list to populate leftSmaller
        for i in range(1, n):
            # remove elements >= to current one from the stack
            while stack and stack[-1][0] >= histogram[i]:
                stack.pop()
            # smaller element on the left side exists
            if stack:
                # set leftSmaller for current element to index of closest smaller element on the left side
                leftSmaller[i] = stack[-1][1]
            # push tuple (current element, current index) onto stack
            stack.append((histogram[i], i))
        
        # re-initialize stack with tuple (last element, last index)
        stack = [(histogram[-1], n - 1)]
        # initialize list of indexes for closest smaller element on the right side
        rightSmaller = [n] * n
        # repeats above loop through list in reverse order to populate rightSmaller
        for i in range(n - 2, -1, -1):
            while stack and stack[-1][0] >= histogram[i]:
                stack.pop()
            if stack:
                rightSmaller[i] = stack[-1][1]
            stack.append((histogram[i], i))
        
        # initialize return variable
        result = 0
        # loop through list a final time to calculate maximum area
        for i in range(n):
            # area of rectangle is width (index of closest smaller (right - left) - 1) * height (current element)
            result = max((rightSmaller[i] - leftSmaller[i] - 1) * histogram[i], result)
        return result
