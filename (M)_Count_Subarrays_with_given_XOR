vim: syntax=python

"""
Python solution for Count Subarrays with given XOR problem at https://www.geeksforgeeks.org/problems/count-subarray-with-given-xor/1
difficulty: medium
input is an array of integers, arr, and an integer, k
goal is to return the number of continuous subarrays of arr having XOR of their elements as k
time complexity and auxiliary space are both O(n)
"""

class Solution:
    # keeps count of XORs at each index, then whenever XOR so far ^ k has already been encountered (which would
    # mean the subarray between that index and current == k), adds that count to the result to be returned
    def subarrayXor(self, arr, k):
        # initialize variable for running XOR of arr
        runningXor = 0
        # initialize dict for count of XORs (include 0: 1 for start of arr)
        xors = {0: 1}
        # initialize return variable
        result = 0
        
        # loop through arr
        for n in arr:
            # keep track of running XOR
            runningXor ^= n
            # if current XOR ^ k has been encountered, add count to result, otherwise add nothing to result
            result += xors.get(runningXor ^ k, 0)
            # increment count of current XOR, or add to dict with count of 1
            xors[runningXor] = xors.get(runningXor, 0) + 1

        # subarrays with XOR k found
        return result
